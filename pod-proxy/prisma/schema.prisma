// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String      @id @default(uuid())
  username      String      @unique
  password      String
  apiKeys       ApiKey[]
  functionCalls FunctionCall[]
  pods          Pod[]

  createdAt     DateTime    @default(now())
  updatedAt     DateTime    @updatedAt
}

model ApiKey {
  id          String      @id @default(uuid())
  apikey      String      @unique
  userId      String
  user        User        @relation(fields: [userId], references: [id])

  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
}

model Pod {
  id                  String              @id @default(uuid())
  name                String              @unique 
  image               String
  url                 String
  status              PodStatus
  userId              String
  user                User        @relation(fields: [userId], references: [id])
  podIp               PodIP?

  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
}

model FunctionCall {
  id          String      @id @default(uuid())
  name        String
  logs        String
  userId      String
  user        User        @relation(fields: [userId], references: [id])

  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
}

model PodIP {
  id                  String              @id @default(uuid())
  podName             String              @unique
  pod                 Pod                 @relation(fields: [podName], references: [name])
  ip                  String         

  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt  
}

enum PodStatus {
  RUNNING
  STOPPED
}